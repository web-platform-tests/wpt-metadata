links:
    - product: chrome
      url: https://crbug.com/630597
      results:
        - test: image-set-rendering.html
        - test: image-set-content-rendering.html
        - test: image-set-parsing.html
    - product: firefox
      url: https://bugzilla.mozilla.org/show_bug.cgi?id=1806025
      results:
        - test: image-set-type-unsupported-rendering-2.html
        - test: image-set-type-unsupported-rendering.html
    - product: firefox
      url: https://bugzilla.mozilla.org/show_bug.cgi?id=1806233
      results:
        - test: image-set-parsing.html
          subtest: e.style['content'] = "image-set(linear-gradient(black, white) 1x, 'example.png' 4x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['content'] = "image-set(url(\"example.png\") 192dpi, linear-gradient(black, white) 1x)" should set the property value
    - label: interop-2023-webcompat
      results:
        - test: image-set-no-res-rendering.html
        - test: image-set-resolution-001.html
        - test: image-set-computed.sub.html
        - test: image-set-content-rendering.html
        - test: image-set-dppx-rendering.html
        - test: image-set-parsing.html
        - test: image-set-rendering-2.html
        - test: image-set-type-first-match-rendering.html
        - test: image-set-type-unsupported-rendering-2.html
        - test: image-set-linear-gradient-rendering.html
        - test: image-set-unordered-res-rendering.html
        - test: image-set-dpi-rendering.html
        - test: image-set-no-url-rendering.html
        - test: image-set-resolution-003.html
        - test: image-set-type-rendering.html
        - test: image-set-type-unsupported-rendering.html
        - test: image-set-empty-url-rendering.html
        - test: image-set-radial-gradient-rendering.html
        - test: image-set-rendering.html
        - test: image-set-type-rendering-3.html
        - test: image-set-type-skip-unsupported-rendering.html
        - test: image-set-dpi-rendering-2.html
        - test: image-set-first-match-rendering.html
        - test: image-set-no-res-rendering-2.html
        - test: image-set-resolution-002.html
        - test: image-set-type-rendering-2.html
        - test: image-set-negative-resolution-rendering-2.html
    - product: chrome
      url: https://crbug.com/1400902
      results:
        - test: image-set-linear-gradient-rendering.html
        - test: image-set-radial-gradient-rendering.html
        - test: image-set-computed.sub.html
          subtest: Property background-image value 'image-set(linear-gradient(black, white) 1x)'
        - test: image-set-computed.sub.html
          subtest: Property background-image value '-webkit-image-set(linear-gradient(black, white) 1x)'
        - test: image-set-computed.sub.html
          subtest: Property content value '-webkit-image-set(url('http://web-platform.test/example.png') 192dpi, linear-gradient(black, white) 1x)'
        - test: image-set-computed.sub.html
          subtest: Property content value 'image-set(url('http://web-platform.test/example.png') 192dpi, linear-gradient(black, white) 1x)'
        - test: image-set-parsing.html
          subtest: e.style['content'] = "-webkit-image-set(url(\"example.png\") 192dpi, linear-gradient(black, white) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['content'] = "image-set(url(\"example.png\") 192dpi, linear-gradient(black, white) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['content'] = "-webkit-image-set(linear-gradient(black, white) 1x, url(\"example.png\") 4x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['content'] = "image-set(linear-gradient(black, white) 1x, url(\"example.png\") 4x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(repeating-conic-gradient(red, blue 25%) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(repeating-conic-gradient(red, blue 25%) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(conic-gradient(black, white) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(conic-gradient(black, white) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(repeating-radial-gradient(red, blue 25%) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(repeating-radial-gradient(red, blue 25%) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(radial-gradient(black, white) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(radial-gradient(black, white) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(repeating-linear-gradient(red, blue 25%) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(repeating-linear-gradient(red, blue 25%) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(linear-gradient(black, white) 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(linear-gradient(black, white) 1x)" should set the property value
    - product: chrome
      url: https://crbug.com/1399341
      results:
        - test: image-set-type-first-match-rendering.html
          subtest: Test status
        - test: image-set-computed.sub.html
          subtest: Property background-image value 'image-set(url(http://web-platform.test/example.png) 1x type('image/png'))'
        - test: image-set-computed.sub.html
          subtest: Property background-image value '-webkit-image-set(url(http://web-platform.test/example.png) type('image/png') 1x)'
        - test: image-set-computed.sub.html
          subtest: Property background-image value 'image-set(url(http://web-platform.test/example.png) type('image/png') 1x)'
        - test: image-set-computed.sub.html
          subtest: Property background-image value '-webkit-image-set(url(http://web-platform.test/example.png) type('image/png'))'
        - test: image-set-computed.sub.html
          subtest: Property background-image value 'image-set(url(http://web-platform.test/example.png) type('image/png'))'
        - test: image-set-computed.sub.html
          subtest: Property background-image value '-webkit-image-set(url(http://web-platform.test/example.png) 1x type('image/png'))'
        - test: image-set-type-rendering-2.html
        - test: image-set-type-rendering-3.html
        - test: image-set-type-rendering.html
        - test: image-set-type-skip-unsupported-rendering.html
        - test: image-set-type-unsupported-rendering-2.html
        - test: image-set-type-unsupported-rendering.html
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(url(\"example.png\") 1x type(\"image/png\"))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(url(\"example.png\") 1x type(\"image/png\"))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(url(example.png) type('image/png'))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(url(example.png) type('image/png'))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(url(example.png) type('image/png') 1x)" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(url(example.png) type('image/png') 1x)" should set the property value
    - product: chrome
      url: https://bugs.chromium.org/p/chromium/issues/detail?id=1420792
      results:
        - test: image-set-negative-resolution-rendering-2.html
    - product: firefox
      url: https://bugzilla.mozilla.org/show_bug.cgi?id=1821782
      results:
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(url(\"example.png\") calc(2x * 3))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(url(\"example.png\") calc(2x * 3))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(url(\"example.png\") calc(1dppx * 1))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(url(\"example.png\") calc(1dppx * 1))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(url(\"example.png\") calc(96dpi * 2))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(url(\"example.png\") calc(96dpi * 2))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "image-set(url(\"example.png\") calc(1dpcm * 96/2.54))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['background-image'] = "-webkit-image-set(url(\"example.png\") calc(1dpcm * 96/2.54))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['content'] = "-webkit-image-set(url(\"example.png\") calc(1 * 96dpi))" should set the property value
        - test: image-set-parsing.html
          subtest: e.style['content'] = "image-set(url(\"example.png\") calc(1 * 96dpi))" should set the property value
