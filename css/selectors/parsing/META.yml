links:
    - product: chrome
      url: https://bugs.chromium.org/p/chromium/issues/detail?id=669058
      results:
        - test: parse-has.html
    - product: firefox
      url: https://bugzilla.mozilla.org/show_bug.cgi?id=1771692
      results:
        - test: parse-has.html
          subtest: '":has(a)" should be a valid selector'
        - test: parse-has.html
          subtest: '":has(#a)" should be a valid selector'
        - test: parse-has.html
          subtest: '":has(.a)" should be a valid selector'
        - test: parse-has.html
          subtest: '":has([a])" should be a valid selector'
        - test: parse-has.html
          subtest: '":has([a=\"b\"])" should be a valid selector'
        - test: parse-has.html
          subtest: '":has([a|=\"b\"])" should be a valid selector'
        - test: parse-has.html
          subtest: '":has(:hover)" should be a valid selector'
        - test: parse-has.html
          subtest: '"*:has(.a)" should be a valid selector'
        - test: parse-has.html
          subtest: '".a:has(.b)" should be a valid selector'
        - test: parse-has.html
          subtest: '".a:has(> .b)" should be a valid selector'
        - test: parse-has.html
          subtest: '".a:has(~ .b)" should be a valid selector'
        - test: parse-has.html
          subtest: '".a:has(+ .b)" should be a valid selector'
        - test: parse-has.html
          subtest: '".a:has(.b) .c" should be a valid selector'
        - test: parse-has.html
          subtest: '".a .b:has(.c)" should be a valid selector'
        - test: parse-has.html
          subtest: '".a .b:has(.c .d)" should be a valid selector'
        - test: parse-has.html
          subtest: '".a .b:has(.c .d) .e" should be a valid selector'
        - test: parse-has.html
          subtest: '".a:has(.b:is(.c .d))" should be a valid selector'
        - test: parse-has.html
          subtest: '".a:is(.b:has(.c) .d)" should be a valid selector'
        - test: parse-has.html
          subtest: '".a:not(:has(.b))" should be a valid selector'
        - test: parse-has.html
          subtest: '".a:has(:not(.b))" should be a valid selector'
        - test: parse-has.html
          subtest: '".a:has(.b):has(.c)" should be a valid selector'
        - test: parse-has.html
          subtest: '"*|*:has(*)" should be a valid selector'
        - test: parse-has.html
          subtest: '":has(*|*)" should be a valid selector'
        - test: parse-has.html
          subtest: '".a:has()" should be a valid selector'
    - product: firefox
      url: https://bugzilla.mozilla.org/show_bug.cgi?id=1773973
      results:
        - test: parse-has-disallow-nesting-has-inside-has.html
          subtest: '".a:has(.b:has(.c), .d)" should be a valid selector'
        - test: parse-has-disallow-nesting-has-inside-has.html
          subtest: '".a:has(.b:is(.c:has(.d) .e))" should be a valid selector'
    - label: interop-2023-has
      results:
        - test: parse-has-disallow-nesting-has-inside-has.html
        - test: parse-has.html
    - product: chrome
      url: https://crbug.com/1469380
      results:
        - test: parse-has-disallow-nesting-has-inside-has.html
          subtest: '".a:has(:is(.b:has(.c)))" should be a valid selector'
        - test: parse-has-disallow-nesting-has-inside-has.html
          subtest: '".a:has(:is(.b:has(.c), .d))" should be a valid selector'
