links:
- product: chrome
  results:
  - test: navigator-window-controls-overlay.html
  url: https://crbug.com/937121
- product: firefox
  results:
  - subtest: the unregisterProtocolHandler method should exist on the navigator object
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "%s" should work.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "foo/%s" should work.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "%shttps://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html"
      should work.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "h%sttps://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html"
      should work.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "https:%s//web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html"
      should work.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s"
      should work.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html#%s"
      should work.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html?foo=%s"
      should work.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html?foo=%s&bar"
      should work.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s/bar/baz/"
      should work.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s/bar/baz/?foo=1337&bar#baz"
      should work.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Valid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%s/foo/%s/"
      should work.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "" should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "" should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "%S" should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "%S" should throw (but after
      scheme)'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "http://%s.com" should throw (but
      after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "http://%s.com" should throw
      (but after scheme)'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "http://%s.example.com" should
      throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "http://%s.example.com" should
      throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "https://%sweb-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html"
      should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "https://%sweb-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html"
      should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "https://web-platform.test:%s8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html"
      should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "https://web-platform.test:%s8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html"
      should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html"
      should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html"
      should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%"
      should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%"
      should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%a"
      should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "https://web-platform.test:8443/html/webappapis/system-state-and-capabilities/the-navigator-object/protocol.https.html/%a"
      should throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "http://example.com" should throw
      (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "http://example.com" should throw
      (but after scheme)'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "http://[v8.:::]//url=%s" should
      throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "http://[v8.:::]//url=%s" should
      throw (but after scheme)'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "https://test:test/" should throw
      (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "https://test:test/" should throw
      (but after scheme)'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "http://example.com/%s" should
      throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "https://example.com/%s" should
      throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "http://foobar.example.com/%s"
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "mailto:%s@example.com" should
      throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "mailto:%s" should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "ftp://web-platform.test:8443/%s"
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Invalid URL "chrome://web-platform.test:8443/%s"
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "chrome://web-platform.test:8443/%s"
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "foo://web-platform.test:8443/%s"
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Invalid URL "blob: URL" should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "about" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "about" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "attachment" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "attachment" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "blob" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "blob" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "chrome" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "chrome" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "cid" protocol should
      throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "cid" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "data" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "data" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "file" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "file" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "ftp" protocol should
      throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "ftp" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "http" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "http" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "https" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "https" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "javascript" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "javascript" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "livescript" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "livescript" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "mid" protocol should
      throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "mid" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "mocha" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "mocha" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "moz-icon" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "moz-icon" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "opera" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "opera" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "operamail" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "operamail" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "res" protocol should
      throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "res" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "resource" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "resource" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "shttp" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "shttp" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "tcl" protocol should
      throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "tcl" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "vbscript" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "vbscript" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "view-source" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "view-source"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "ws" protocol should
      throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "ws" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "wss" protocol should
      throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "wss" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "wyciwyg" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "wyciwyg" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "unrecognized" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "unrecognized"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: "registerProtocolHandler: Attempting to override the \"m\u0430ilto\"\
      \ protocol should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: "unregisterProtocolHandler: Attempting to override the \"m\u0430ilto\"\
      \ protocol should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "mailto:" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "mailto:" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "mailto://" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "mailto://" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: "registerProtocolHandler: Attempting to override the \"mailto\0\" protocol\
      \ should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: "unregisterProtocolHandler: Attempting to override the \"mailto\0\" protocol\
      \ should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: "registerProtocolHandler: Attempting to override the \"mailtoo\b\" protocol\
      \ should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: "unregisterProtocolHandler: Attempting to override the \"mailtoo\b\"\
      \ protocol should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "mailto

      " protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "mailto

      " protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "http://" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "http://" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "ssh:/" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "ssh:/" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "magnet:+" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "magnet:+" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "tel:sip" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "tel:sip" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "foo" protocol should
      throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "foo" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "fweb+oo" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "fweb+oo" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "web+" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "web+" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "web+1" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "web+1" protocol
      should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "web+namewithid123"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "web+namewithid123"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "web+namewithtrailingspace
      " protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "web+namewithtrailingspace
      " protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: "registerProtocolHandler: Attempting to override the \"web+pr\xE9fixewithaccent\"\
      \ protocol should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: "unregisterProtocolHandler: Attempting to override the \"web+pr\xE9fixewithaccent\"\
      \ protocol should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: "registerProtocolHandler: Attempting to override the \"web+\u212Aelvinsign\"\
      \ protocol should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: "unregisterProtocolHandler: Attempting to override the \"web+\u212Aelvinsign\"\
      \ protocol should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: "registerProtocolHandler: Attempting to override the \"web+latinsmallletterlong\u017F\
      \" protocol should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: "unregisterProtocolHandler: Attempting to override the \"web+latinsmallletterlong\u017F\
      \" protocol should throw SECURITY_ERR."
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "web+dots.are.forbidden"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "web+dots.are.forbidden"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "web+dashes-are-forbidden"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "web+dashes-are-forbidden"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "web+underscores_are_forbidden"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "web+underscores_are_forbidden"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "web+spaces are
      forbidden" protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "web+spaces are
      forbidden" protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "web+non*alpha*are*forbidden"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "web+non*alpha*are*forbidden"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'registerProtocolHandler: Attempting to override the "web+digits123areforbidden"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: Attempting to override the "web+digits123areforbidden"
      protocol should throw SECURITY_ERR.'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "bitcoin" protocol should
      work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "geo" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "im" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "irc" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "ircs" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "magnet" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "mailto" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "mms" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "news" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "nntp" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "openpgp4fpr" protocol should
      work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "sip" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "sms" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "smsto" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "ssh" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "tel" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "urn" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "webcal" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "wtai" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "xmpp" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "BitcoIn" protocol should
      work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "Irc" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "MagneT" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "SmsTo" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "TEL" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "teL" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "WebCAL" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "WTAI" protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "web+myprotocol" protocol
      should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "web+abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
      protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "web+UpperCasedIsLowercased"
      protocol should work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "WEB+seeabove" protocol should
      work'
    test: protocol.https.html
  - subtest: 'unregisterProtocolHandler: overriding the "WeB+SeEaBoVe" protocol should
      work'
    test: protocol.https.html
  url: https://bugzilla.mozilla.org/show_bug.cgi?id=1706028
- product: firefox
  results:
  - subtest: window.clientInformation exists and equals window.navigator
    test: clientinformation.window.html
  - subtest: Discarding the browsing context must not change window.navigator
    test: per-global.window.html
  - subtest: Discarding the browsing context must not change window.clientInformation
    test: per-global.window.html
  - subtest: document.open() must replace window.clientInformation
    test: per-global.window.html
  url: https://bugzilla.mozilla.org/show_bug.cgi?id=1717082
