links:
    - product: safari
      url: https://bugs.webkit.org/show_bug.cgi?id=202495
      results:
        - test: directionality-002.tentative.html
          status: FAIL
    - product: webkitgtk
      url: https://bugs.webkit.org/show_bug.cgi?id=202495
      results:
        - test: directionality-002.tentative.html
          status: FAIL
    - product: chrome
      url: https://crbug.com/920069
      results:
        - test: offsetParent-across-shadow-boundaries.html
          status: FAIL
    - product: chrome
      url: https://bugs.chromium.org/p/chromium/issues/detail?id=937746
      results:
        - test: historical.html
          subtest: event.path should not exist
        - test: historical.html
          subtest: HTMLContentElement should not exist
    - product: firefox
      url: https://bugzilla.mozilla.org/show_bug.cgi?id=1682652
      results:
        - test: imperative-slot-api-slotchange.html
          subtest: slotchange event must not fire synchronously.
        - test: imperative-slot-api-slotchange.html
          subtest: slotchange event should not fire when assignments do not change assignedNodes.
        - test: imperative-slot-api-slotchange.html
          subtest: slotchange event should not fire when same node is assigned.
        - test: imperative-slot-api-slotchange.html
          subtest: Fire slotchange event when slot's assigned nodes changes.
        - test: imperative-slot-api-slotchange.html
          subtest: Fire slotchange event on previous slot and new slot when node is reassigned.
        - test: imperative-slot-api-slotchange.html
          subtest: Fire slotchange event on node assignment and when assigned node is removed.
        - test: imperative-slot-api-slotchange.html
          subtest: Fire slotchange event when order of assigned nodes changes.
        - test: imperative-slot-api-slotchange.html
          subtest: Fire slotchange event when assigned node is removed.
        - test: imperative-slot-api-slotchange.html
          subtest: Fire slotchange event when removing a slot from Shadows Root that changes its assigned nodes.
        - test: imperative-slot-api-slotchange.html
          subtest: No slotchange event when adding or removing an empty slot.
        - test: imperative-slot-api-slotchange.html
          subtest: No slotchange event when adding another slotable.
        - test: imperative-slot-api-slotchange.html
          subtest: Fire slotchange event when assign node to nested slot, ensure event bubbles ups.
    - product: firefox
      url: https://bugzilla.mozilla.org/show_bug.cgi?id=1690964
      results:
        - test: imperative-slot-api.html
          subtest: Imperative slot API throws exception when not slotAssignment != 'manual'.
        - test: imperative-slot-api.html
          subtest: Imperative slot API throws exception when slottable parentNode != slot's host.
        - test: imperative-slot-api.html
          subtest: Imperative slot API can assign nodes in manual slot assignment.
        - test: imperative-slot-api.html
          subtest: Order of slottables is preserved in manual slot assignment.
        - test: imperative-slot-api.html
          subtest: Previously assigned slottable is moved to new slot when it's reassigned.
        - test: imperative-slot-api.html
          subtest: Order and assignment of nodes are preserved during multiple assignment in a row.
        - test: imperative-slot-api.html
          subtest: Assigning invalid nodes causes exception and slot returns to its previous state.
        - test: imperative-slot-api.html
          subtest: Moving a slot to a new host, the slot loses its previously assigned slottables.
        - test: imperative-slot-api.html
          subtest: Moving a slot's tree order position within a shadow host has no impact on its assigned slottables.
        - test: imperative-slot-api.html
          subtest: Appending slottable to different host, it loses slot assignment. It can be re-assigned within a new host.
        - test: imperative-slot-api.html
          subtest: Previously assigned node should not be assigned if slot moved to a new shadow root. The slot remains empty when moved back, no trigger recalc.
        - test: imperative-slot-api.html
          subtest: Previously assigned node should not be assigned if slot moved to a new shadow root. The slot remains empty when moved back, trigger recalc.
        - test: imperative-slot-api.html
          subtest: Assignment with the same node in parameters should be ignored, last one wins.
        - test: imperative-slot-api.html
          subtest: Removing a slot from DOM resets its slottable's slot assignment.
        - test: imperative-slot-api.html
          subtest: A slot should be cleared of assigned nodes even if it's re-inserted into the same shadow root.
    - product: chrome
      url: https://bugs.chromium.org/p/chromium/issues/detail?id=1226120
      results:
        - test: historical.html
    - label: interop-2023-webcomponents
      results:
        - test: capturing-and-bubbling-event-listeners-across-shadow-trees.html
    - product: firefox
      url: https://bugzilla.mozilla.org/show_bug.cgi?id=1731504
      results:
        - test: capturing-and-bubbling-event-listeners-across-shadow-trees.html
    - label: interop-2024-dsd
      results:
        - test: shadow-root-clonable.html
