links:
    - product: firefox
      url: https://bugzilla.mozilla.org/show_bug.cgi?id=1791715
      results:
        - test: exception_details.py
          subtest: test_exception_details[new WeakSet()-expected25-False]
        - test: exception_details.py
          subtest: test_exception_details[new Error('SOME_ERROR_TEXT')-expected26-False]
        - test: exception_details.py
          subtest: test_exception_details[Promise.resolve()-expected27-False]
        - test: exception_details.py
          subtest: test_exception_details[new Int32Array()-expected28-False]
        - test: exception_details.py
          subtest: test_exception_details[new ArrayBuffer()-expected29-False]
        - test: exception_details.py
          subtest: test_exception_details[document.createElement('div')-expected30-False]
        - test: exception_details.py
          subtest: test_exception_details[window-expected31-False]
    - product: firefox
      url: https://bugzilla.mozilla.org/show_bug.cgi?id=1841786
      results:
        - test: exception_details_await_promise.py
          subtest: test_exception_details[[1, 2][Symbol.iterator]()-expected28]
        - test: exception_details_await_promise.py
          subtest: test_exception_details['mystring'[Symbol.iterator]()-expected29]
        - test: exception_details_await_promise.py
          subtest: test_exception_details[(new Set([1,2]))[Symbol.iterator]()-expected30]
        - test: exception_details_await_promise.py
          subtest: test_exception_details[(new Map([[1,2]]))[Symbol.iterator]()-expected31]
        - test: exception_details_await_promise.py
          subtest: test_exception_details[new Proxy({}, {})-expected32]
        - test: exception_details_await_promise.py
          subtest: test_exception_details[(function*() { yield 'a'; })()-expected33]
        - test: exception_details.py
          subtest: test_exception_details[[1, 2][Symbol.iterator]()-expected28]
        - test: exception_details.py
          subtest: test_exception_details['mystring'[Symbol.iterator]()-expected29]
        - test: exception_details.py
          subtest: test_exception_details[(new Set([1,2]))[Symbol.iterator]()-expected30]
        - test: exception_details.py
          subtest: test_exception_details[(new Map([[1,2]]))[Symbol.iterator]()-expected31]
        - test: exception_details.py
          subtest: test_exception_details[new Proxy({}, {})-expected32]
        - test: exception_details.py
          subtest: test_exception_details[(function*() { yield 'a'; })()-expected33]
        - test: remote_values.py
          subtest: test_remote_values[(function*() { yield 'a'; })()-expected20-False]
        - test: remote_values.py
          subtest: test_remote_values[(function*() { yield 'a'; })()-expected20-True]
        - test: remote_values.py
          subtest: test_remote_values[new Proxy({}, {})-expected19-False]
        - test: remote_values.py
          subtest: test_remote_values[new Proxy({}, {})-expected19-True]
        - test: remote_values.py
          subtest: test_remote_values[(new Map([[1,2]]))[Symbol.iterator]()-expected18-False]
        - test: remote_values.py
          subtest: test_remote_values[(new Map([[1,2]]))[Symbol.iterator]()-expected18-True]
        - test: remote_values.py
          subtest: test_remote_values[(new Set([1,2]))[Symbol.iterator]()-expected17-False]
        - test: remote_values.py
          subtest: test_remote_values[(new Set([1,2]))[Symbol.iterator]()-expected17-True]
        - test: remote_values.py
          subtest: test_remote_values['mystring'[Symbol.iterator]()-expected16-False]
        - test: remote_values.py
          subtest: test_remote_values['mystring'[Symbol.iterator]()-expected16-True]
        - test: remote_values.py
          subtest: test_remote_values[[1, 2][Symbol.iterator]()-expected15-False]
        - test: remote_values.py
          subtest: test_remote_values[[1, 2][Symbol.iterator]()-expected15-True]
    - product: firefox
      url: https://bugzilla.mozilla.org/show_bug.cgi?id=1846744
      results:
        - test: arguments.py
          subtest: test_primitive_value[Number.NaN-argument4]
