links:
    - product: deno
      url: https://github.com/denoland/deno/issues/10980
      results:
        - test: close.any.html
          subtest: when sink calls error asynchronously while sink close is in-flight, the stream should not become errored
        - test: close.any.html
          subtest: when sink calls error synchronously while closing, the stream should not become errored
        - test: close.any.html
          subtest: the promise returned by async abort during close should resolve
        - test: close.any.html
          subtest: when close is called on a WritableStream in waiting state, ready should be fulfilled immediately even if close takes a long time
        - test: close.any.html
          subtest: promises must fulfill/reject in the expected order on aborted closure
        - test: close.any.html
          subtest: promises must fulfill/reject in the expected order on aborted and errored closure
        - test: aborting.any.html
          subtest: Closing a WritableStream and aborting it while it closes causes the stream to ignore the abort attempt
        - test: aborting.any.html
          subtest: underlying abort() should not be called if underlying close() has started
        - test: aborting.any.html
          subtest: if underlying close() has started and then rejects, the abort() and close() promises should reject with the underlying close rejection reason
        - test: aborting.any.html
          subtest: writer close() promise should resolve before abort() promise
        - test: aborting.any.html
          subtest: writer.abort(), controller.error() while there is an in-flight close, and then finish the close
